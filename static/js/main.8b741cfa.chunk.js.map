{"version":3,"sources":["pages/Landing.jsx","components/MainContainer.jsx","components/NavBar.jsx","pages/Portfolio/components/PortfolioDetail.jsx","pages/Portfolio/components/PortfolioList.jsx","pages/Portfolio/Portfolio.jsx","pages/Portfolio/PortfolioPageDetail.jsx","pages/Contact/Contact.jsx","App.js","serviceWorker.js","index.js"],"names":["Landing","Fragment","useStyles","makeStyles","theme","root","display","justifyContent","marginTop","spacing","MainContainer","props","classes","Container","className","maxWidth","children","toolBar","link","color","textDecoration","title","alignSelf","flexGrow","time","fontSize","NavBar","matches","useMediaQuery","React","useState","moment","Date","format","setTime","useEffect","date","setInterval","clearInterval","AppBar","position","Toolbar","Typography","variant","to","Button","textAlign","cursor","padding","PortfolioDetail","project","handleClick","Link","onClick","id","techs","map","tech","i","key","window","open","width","flexWrap","paper","minHeight","minWidth","margin","listItem","projects","PortfolioList","navigate","history","push","find","proj","List","Paper","ListItem","Portfolio","PortfolioPageDetail","location","state","form","inputContainer","buttonContainer","button","Contact","useRef","initialState","controls","email","value","valid","message","formValues","setForm","formValid","setFormValid","error","setError","handleChange","e","target","name","validate","EmailValidator","length","ref","TextField","autoComplete","onBlur","label","required","onChange","rows","multiline","disabled","undefined","preventDefault","client","sendMessage","parse_mode","then","res","TelegramClient","connect","App","exact","path","component","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8b741cfa.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Landing = () => {\n  return (\n    <React.Fragment>\n      <div>Hello World</div>\n    </React.Fragment>\n  );\n};\n\nexport default Landing;\n","import React from 'react';\nimport { Container, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // border: '1px solid #DDDDDD',\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.spacing(5)\n  }\n}));\n\nconst MainContainer = props => {\n  const classes = useStyles();\n  return (\n    <>\n      <Container className={classes.root} maxWidth='md'>\n        {props.children}\n      </Container>\n    </>\n  );\n};\n\nexport default MainContainer;\n","import React from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  Button,\n  makeStyles,\n  Typography,\n  useMediaQuery\n} from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  toolBar: {\n    display: 'flex'\n  },\n  link: {\n    color: 'white',\n    textDecoration: 'none'\n  },\n  title: {\n    alignSelf: 'initial',\n    flexGrow: 1\n  },\n  time: {\n    fontSize: '12px'\n  }\n}));\n\nconst NavBar = () => {\n  const classes = useStyles();\n  const matches = useMediaQuery('(max-width:768px)');\n  const format = 'hh:mm a';\n  const [time, setTime] = React.useState(moment(new Date()).format(format));\n\n  React.useEffect(() => {\n    const date = moment(new Date());\n    setInterval(() => setTime(date.format(format), 3000));\n    return () => clearInterval();\n  });\n\n  return (\n    <>\n      <AppBar className={classes.root} position='static'>\n        <Toolbar className={classes.toolBar}>\n          <Typography className={classes.title} variant='h6'>\n            <Link className={classes.link} to='/'>\n              {matches ? 'MH' : 'Mike Hohne'}\n            </Link>\n          </Typography>\n          <Button>\n            <Link className={classes.link} to='/portfolio'>\n              Portfolio\n            </Link>\n          </Button>\n          <Button>\n            <Link className={classes.link} to='/contact'>\n              Contact\n            </Link>\n          </Button>\n          <span className={classes.time}>{time}</span>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport { Typography, Link, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    textAlign: 'center'\n  },\n  link: {\n    cursor: 'pointer',\n    '&:hover': {\n      textDecoration: 'none'\n    },\n    padding: '4px'\n  }\n}));\n\nconst PortfolioDetail = props => {\n  const { project, handleClick } = props;\n\n  function onSelect() {\n    handleClick(project.id);\n  }\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Link onClick={onSelect} className={classes.link}>\n        <Typography variant='h6'>{project.title}</Typography>\n      </Link>\n      <div>\n        {project.techs.map((tech, i) => (\n          <Link\n            key={tech + i}\n            onClick={() =>\n              window.open(`https://google.com/search?q=${tech}`, '_blank')\n            }\n            className={classes.link}\n          >\n            {tech}\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PortfolioDetail;\n","import React from 'react';\nimport { List, ListItem, makeStyles, Paper } from '@material-ui/core';\nimport PortfolioDetail from './PortfolioDetail';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap'\n  },\n  paper: {\n    minHeight: '300px',\n    minWidth: '300px',\n    margin: '10px'\n  },\n  listItem: {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nconst projects = [\n  { title: 'First', id: 'first', techs: ['javascript', 'nodejs'] },\n  { title: 'Second', id: 'second', techs: ['react', 'javascript'] },\n  { title: 'Third', id: 'third', techs: ['angular', 'javascript'] },\n  { title: 'Fourth', id: 'fourth', techs: ['react', 'javascript'] },\n  { title: 'Fifth', id: 'fifth', techs: ['c#'] }\n];\n\nconst PortfolioList = props => {\n  const classes = useStyles();\n\n  function navigate(id) {\n    props.history.push(`/portfolio/${id}`, {\n      project: projects.find(proj => proj.id === id)\n    });\n  }\n  return (\n    <List className={classes.root}>\n      {projects.map(project => (\n        <Paper key={project.title} className={classes.paper}>\n          <ListItem className={classes.listItem}>\n            <PortfolioDetail handleClick={navigate} project={project} />\n          </ListItem>\n        </Paper>\n      ))}\n    </List>\n  );\n};\n\nexport default PortfolioList;\n","import React from 'react';\nimport PortfolioList from './components/PortfolioList';\n\nconst Portfolio = props => {\n  return <PortfolioList {...props} />;\n};\n\nexport default Portfolio;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '10px',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nconst PortfolioPageDetail = props => {\n  const { project } = props.location.state;\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.root}>\n        <Typography variant='h4'>{project.title}</Typography>\n      </div>\n    </>\n  );\n};\n\nexport default PortfolioPageDetail;\n","import React from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport * as EmailValidator from 'email-validator';\n\nconst useStyles = makeStyles(theme => ({\n  form: {\n    minWidth: '350px'\n  },\n  root: {\n    marginTop: '10px'\n  },\n  inputContainer: {\n    width: '100%'\n  },\n  buttonContainer: {\n    textAlign: '100%'\n  },\n  button: {\n    width: '100%'\n  }\n}));\n\nconst Contact = props => {\n  const form = React.useRef(null);\n  const initialState = {\n    controls: {\n      email: {\n        value: '',\n        valid: false\n      },\n      message: {\n        value: '',\n        valid: false\n      }\n    }\n  };\n  const [formValues, setForm] = React.useState(initialState);\n  const [formValid, setFormValid] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    if (form) {\n      if (\n        formValues.controls.message.valid &&\n        formValues.controls.email.valid\n      ) {\n        setFormValid(true);\n      } else {\n        setFormValid(false);\n      }\n    }\n  }, [formValues]);\n\n  function handleChange(e) {\n    const { value, name } = e.target;\n    setForm({\n      ...formValues,\n      controls: {\n        ...formValues.controls,\n        [name]: {\n          value: value,\n          valid: validate(name, value)\n        }\n      }\n    });\n  }\n\n  function handleBlur() {\n    if (formValues.controls.email.valid) {\n      return setError(null);\n    }\n    setError('Email is Invalid');\n  }\n\n  function validate(name, value) {\n    switch (name) {\n      case 'email':\n        return EmailValidator.validate(value);\n      case 'message':\n        return value.length > 0;\n      default:\n        return false;\n    }\n  }\n\n  function sendMessage() {\n    props.client\n      .sendMessage(\n        392535675,\n        `<b>${formValues.controls.email.value}</b> ${formValues.controls.message.value}`,\n        { parse_mode: 'HTML' }\n      )\n      .then(res => setForm(initialState));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    sendMessage();\n  }\n\n  return (\n    <div>\n      <form className={classes.form} ref={form}>\n        <div className={classes.root}>\n          <TextField\n            className={classes.inputContainer}\n            name='email'\n            autoComplete='off'\n            value={formValues.controls.email.value}\n            onBlur={handleBlur}\n            label='Email'\n            required\n            variant='outlined'\n            onChange={handleChange}\n          />\n          <span>{error}</span>\n        </div>\n        <div className={classes.root}>\n          <TextField\n            className={classes.inputContainer}\n            name='message'\n            value={formValues.controls.message.value}\n            label='Message'\n            required\n            variant='outlined'\n            rows='8'\n            multiline\n            onChange={handleChange}\n          />\n        </div>\n        <div className={classes.root}>\n          <Button\n            variant='contained'\n            color='primary'\n            className={classes.button}\n            disabled={!formValid ? true : undefined}\n            onClick={handleSubmit}\n          >\n            Send Message\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Contact;\n","import React from 'react';\nimport './App.css';\nimport Landing from './pages/Landing';\nimport MainContainer from './components/MainContainer';\nimport NavBar from './components/NavBar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Portfolio from './pages/Portfolio/Portfolio';\nimport PortfolioPageDetail from './pages/Portfolio/PortfolioPageDetail';\nimport { TelegramClient } from 'messaging-api-telegram';\nimport Contact from './pages/Contact/Contact';\n\nconst client = TelegramClient.connect(\n  '804236995:AAEoPM8BzKP6UKvVj6hnQHBE8twXf2dRFTE'\n);\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <NavBar />\n        <MainContainer>\n          <Switch>\n            <Route exact path='/' component={Landing} />\n            <Route exact path='/home' component={Landing} />\n            <Route exact path='/portfolio' component={Portfolio} />\n            <Route\n              exact\n              path='/contact'\n              render={props => <Contact {...props} client={client} />}\n            />\n            <Route\n              exact\n              path='/portfolio/:id'\n              component={PortfolioPageDetail}\n            />\n          </Switch>\n        </MainContainer>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
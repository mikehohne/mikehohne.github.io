{"version":3,"sources":["pages/Landing.jsx","components/MainContainer.jsx","components/NavBar.jsx","pages/Portfolio/components/PortfolioDetail.jsx","pages/Portfolio/components/PortfolioList.jsx","pages/Portfolio/Portfolio.jsx","pages/Portfolio/PortfolioPageDetail.jsx","pages/Contact/Contact.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexDirection","fontFamily","fontSize","avatar","width","height","borderRadius","alignSelf","nameContainer","textAlign","textDecoration","Landing","classes","Fragment","className","Avatar","variant","alt","src","justifyContent","marginTop","spacing","MainContainer","props","Container","maxWidth","children","backgroundColor","toolBar","link","color","title","flexGrow","time","NavBar","matches","useMediaQuery","React","useState","moment","Date","format","setTime","useEffect","date","console","log","interval","setInterval","clearInterval","AppBar","position","Toolbar","Typography","to","Button","cursor","padding","PortfolioDetail","project","handleClick","Link","onClick","id","techs","map","tech","i","key","window","open","flexWrap","paper","minHeight","minWidth","margin","listItem","projects","PortfolioList","navigate","history","push","find","proj","List","Paper","ListItem","Portfolio","style","PortfolioPageDetail","location","state","form","inputContainer","buttonContainer","button","Contact","client","useRef","initialState","controls","email","value","valid","message","formValues","setForm","formValid","setFormValid","error","setError","handleChange","e","target","name","validate","EmailValidator","length","ref","TextField","autoComplete","onBlur","label","required","onChange","rows","multiline","disabled","undefined","preventDefault","sendMessage","parse_mode","then","res","TelegramClient","connect","process","App","exact","path","component","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2a734f36.chunk.js","sourcesContent":["import React from 'react';\nimport { Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport '../shared/fonts/fonts.css';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    fontFamily: 'Damion, cursive',\n    fontSize: '2em'\n  },\n  avatar: {\n    width: '300px',\n    height: '300px',\n    borderRadius: '4px',\n    alignSelf: 'center'\n  },\n  nameContainer: {\n    textAlign: 'center',\n    '& p': {\n      textDecoration: 'underline'\n    }\n  }\n}));\n\nconst Landing = () => {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <div className={classes.root}>\n          <Avatar\n            className={classes.avatar}\n            variant='square'\n            alt='bio-image'\n            src='https://scontent-sea1-1.xx.fbcdn.net/v/t1.0-9/1800339_10100453854274501_6543181869932306714_n.jpg?_nc_cat=110&_nc_ohc=NsEB7V3Qtr0AQl58dCP_Tyvd8ar7PT6F0w-7ttpjG2AAPco6hu0pGyOww&_nc_ht=scontent-sea1-1.xx&oh=ae6728377f96b45d849ca7019615f356&oe=5EAE9D46'\n          />\n        <div className={classes.nameContainer}>\n          <p>\n            Mike Hohne - <span>Developer</span>\n          </p>\n          {/* <p>Developer</p> */}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Landing;\n","import React from 'react';\nimport { Container, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    justifyContent: 'center',\n    marginTop: theme.spacing(5),\n    borderRadius: '4px'\n  }\n}));\n\nconst MainContainer = props => {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Container className={classes.root} maxWidth='md'>\n        {props.children}\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default MainContainer;\n","import React from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  Button,\n  makeStyles,\n  Typography,\n  useMediaQuery\n} from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: '#101010'\n  },\n  toolBar: {\n    display: 'flex'\n  },\n  link: {\n    color: 'white',\n    textDecoration: 'none'\n  },\n  title: {\n    alignSelf: 'initial',\n    flexGrow: 1\n  },\n  time: {\n    fontSize: '12px'\n  }\n}));\n\nconst NavBar = () => {\n  const classes = useStyles();\n  const matches = useMediaQuery('(max-width:768px)');\n  const format = 'hh:mm a';\n  const [time, setTime] = React.useState(moment(new Date()).format(format));\n\n  React.useEffect(() => {\n    const date = moment(new Date());\n    console.log(date);\n    const interval = setInterval(() => {\n      setTime(date.format(format));\n    }, 2000);\n    return () => clearInterval(interval);\n  });\n\n  return (\n    <>\n      <AppBar className={classes.root} position='static'>\n        <Toolbar className={classes.toolBar}>\n          <Typography className={classes.title} variant='h6'>\n            <Link className={classes.link} to='/'>\n              {matches ? 'MH' : 'Mike Hohne'}\n            </Link>\n          </Typography>\n          <Button>\n            <Link className={classes.link} to='/portfolio'>\n              Portfolio\n            </Link>\n          </Button>\n          <Button>\n            <Link className={classes.link} to='/contact'>\n              Contact\n            </Link>\n          </Button>\n          <span className={classes.time}>{time}</span>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport { Typography, Link, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    textAlign: 'center'\n  },\n  link: {\n    cursor: 'pointer',\n    '&:hover': {\n      textDecoration: 'none'\n    },\n    padding: '4px'\n  }\n}));\n\nconst PortfolioDetail = props => {\n  const { project, handleClick } = props;\n\n  function onSelect() {\n    handleClick(project.id);\n  }\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Link onClick={onSelect} className={classes.link}>\n        <Typography variant='h6'>{project.title}</Typography>\n      </Link>\n      <div>\n        {project.techs.map((tech, i) => (\n          <Link\n            key={tech + i}\n            onClick={() =>\n              window.open(`https://google.com/search?q=${tech}`, '_blank')\n            }\n            className={classes.link}\n          >\n            {tech}\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PortfolioDetail;\n","import React from 'react';\nimport { List, ListItem, makeStyles, Paper } from '@material-ui/core';\nimport PortfolioDetail from './PortfolioDetail';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap'\n  },\n  paper: {\n    minHeight: '300px',\n    minWidth: '300px',\n    margin: '10px'\n  },\n  listItem: {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nconst projects = [\n  { title: 'First', id: 'first', techs: ['javascript', 'nodejs'] },\n  { title: 'Second', id: 'second', techs: ['react', 'javascript'] },\n  { title: 'Third', id: 'third', techs: ['angular', 'javascript'] },\n  { title: 'Fourth', id: 'fourth', techs: ['react', 'javascript'] },\n  { title: 'Fifth', id: 'fifth', techs: ['c#'] }\n];\n\nconst PortfolioList = props => {\n  const classes = useStyles();\n\n  function navigate(id) {\n    props.history.push(`/portfolio/${id}`, {\n      project: projects.find(proj => proj.id === id)\n    });\n  }\n  return (\n    <List className={classes.root}>\n      {projects.map(project => (\n        <Paper key={project.title} className={classes.paper}>\n          <ListItem className={classes.listItem}>\n            <PortfolioDetail handleClick={navigate} project={project} />\n          </ListItem>\n        </Paper>\n      ))}\n    </List>\n  );\n};\n\nexport default PortfolioList;\n","import React from 'react';\nimport PortfolioList from './components/PortfolioList';\n\nexport const Portfolio = props => {\n  return (\n    <React.Fragment>\n      <h3 style={{ textAlign: 'center' }}>Projects</h3>\n      <PortfolioList {...props} />\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '10px',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nconst PortfolioPageDetail = props => {\n  const { project } = props.location.state;\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.root}>\n        <Typography variant='h4'>{project.title}</Typography>\n      </div>\n    </>\n  );\n};\n\nexport default PortfolioPageDetail;\n","import React from 'react';\nimport { TextField, Button, makeStyles } from '@material-ui/core';\nimport * as EmailValidator from 'email-validator';\n\nconst useStyles = makeStyles(theme => ({\n  form: {\n    minWidth: '300px'\n  },\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  inputContainer: {\n    width: '100%'\n  },\n  buttonContainer: {\n    textAlign: '100%'\n  },\n  button: {\n    width: '100%',\n    height: '75px'\n  }\n}));\n\nexport function Contact({ client }) {\n  const form = React.useRef(null);\n  const initialState = {\n    controls: {\n      email: {\n        value: '',\n        valid: false\n      },\n      message: {\n        value: '',\n        valid: false\n      }\n    }\n  };\n  const [formValues, setForm] = React.useState(initialState);\n  const [formValid, setFormValid] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    if (form) {\n      if (\n        formValues.controls.message.valid &&\n        formValues.controls.email.valid\n      ) {\n        setFormValid(true);\n      } else {\n        setFormValid(false);\n      }\n    }\n  }, [formValues]);\n\n  function handleChange(e) {\n    const { value, name } = e.target;\n    setForm({\n      ...formValues,\n      controls: {\n        ...formValues.controls,\n        [name]: {\n          value: value,\n          valid: validate(name, value)\n        }\n      }\n    });\n  }\n\n  function handleBlur() {\n    if (formValues.controls.email.valid) {\n      return setError(null);\n    }\n    setError('Email is Invalid');\n  }\n\n  function validate(name, value) {\n    switch (name) {\n      case 'email':\n        return EmailValidator.validate(value);\n      case 'message':\n        return value.length > 0;\n      default:\n        return false;\n    }\n  }\n\n  function sendMessage() {\n    client\n      .sendMessage(\n        392535675,\n        `<b>${formValues.controls.email.value}</b> ${formValues.controls.message.value}`,\n        { parse_mode: 'HTML' }\n      )\n      .then(res => setForm(initialState));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    sendMessage();\n  }\n\n  return (\n    <React.Fragment>\n      <h3 style={{ textAlign: 'center' }}>Contact Me</h3>\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <form className={classes.form} ref={form}>\n          <div className={classes.root}>\n            <TextField\n              className={classes.inputContainer}\n              name='email'\n              autoComplete='off'\n              value={formValues.controls.email.value}\n              onBlur={handleBlur}\n              label='Email'\n              required\n              variant='outlined'\n              onChange={handleChange}\n            />\n            <span>{error}</span>\n          </div>\n          <div className={classes.root}>\n            <TextField\n              className={classes.inputContainer}\n              name='message'\n              value={formValues.controls.message.value}\n              label='Message'\n              required\n              variant='outlined'\n              rows='8'\n              multiline\n              onChange={handleChange}\n            />\n          </div>\n          <div className={classes.root}>\n            <Button\n              variant='contained'\n              color='primary'\n              className={classes.button}\n              disabled={!formValid ? true : undefined}\n              onClick={handleSubmit}\n            >\n              Send Message\n            </Button>\n          </div>\n        </form>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport Landing from './pages/Landing';\nimport MainContainer from './components/MainContainer';\nimport NavBar from './components/NavBar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Portfolio } from './pages/Portfolio/Portfolio';\nimport PortfolioPageDetail from './pages/Portfolio/PortfolioPageDetail';\nimport { TelegramClient } from 'messaging-api-telegram';\nimport { Contact } from './pages/Contact/Contact';\n\nconst client = TelegramClient.connect(process.env.REACT_APP_TELEGRAM_API_KEY);\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <NavBar />\n        <MainContainer>\n          <Switch>\n            <Route exact path='/' component={Landing} />\n            <Route exact path='/home' component={Landing} />\n            <Route exact path='/portfolio' component={Portfolio} />\n            <Route\n              exact\n              path='/contact'\n              render={props => <Contact {...props} client={client} />}\n            />\n            <Route\n              exact\n              path='/portfolio/:id'\n              component={PortfolioPageDetail}\n            />\n          </Switch>\n        </MainContainer>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
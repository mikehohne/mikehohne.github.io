{"version":3,"sources":["pages/Landing.jsx","components/MainContainer.jsx","components/NavBar.jsx","pages/Portfolio/components/PortfolioDetail.jsx","pages/Portfolio/components/PortfolioList.jsx","pages/Portfolio/Portfolio.jsx","pages/Portfolio/PortfolioPageDetail.jsx","App.js","serviceWorker.js","index.js"],"names":["Landing","Fragment","useStyles","makeStyles","theme","root","display","justifyContent","marginTop","spacing","MainContainer","props","classes","Container","className","maxWidth","children","toolBar","link","color","textDecoration","title","alignSelf","flexGrow","time","fontSize","NavBar","matches","useMediaQuery","console","log","React","useState","moment","Date","format","setTime","useEffect","date","setInterval","clearInterval","AppBar","position","Toolbar","Typography","variant","to","Button","textAlign","cursor","padding","PortfolioDetail","project","handleClick","Link","onClick","id","techs","map","tech","i","key","window","open","width","flexWrap","paper","minHeight","minWidth","margin","listItem","projects","PortfolioList","navigate","history","push","find","proj","List","Paper","ListItem","Portfolio","PortfolioPageDetail","location","state","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cfa670a1.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Landing = () => {\n  return (\n    <React.Fragment>\n      <div>Hello World</div>\n    </React.Fragment>\n  );\n};\n\nexport default Landing;\n","import React from 'react';\nimport { Container, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // border: '1px solid #DDDDDD',\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.spacing(5)\n  }\n}));\n\nconst MainContainer = props => {\n  const classes = useStyles();\n  return (\n    <>\n      <Container className={classes.root} maxWidth='md'>\n        {props.children}\n      </Container>\n    </>\n  );\n};\n\nexport default MainContainer;\n","import React from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  Button,\n  makeStyles,\n  Typography,\n  useMediaQuery\n} from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  toolBar: {\n    display: 'flex'\n  },\n  link: {\n    color: 'white',\n    textDecoration: 'none'\n  },\n  title: {\n    alignSelf: 'initial',\n    flexGrow: 1\n  },\n  time: {\n    fontSize: '12px'\n  }\n}));\n\nconst NavBar = () => {\n  const classes = useStyles();\n  const matches = useMediaQuery('(max-width:768px)');\n  console.log(matches);\n  const format = 'hh:mm a';\n  const [time, setTime] = React.useState(moment(new Date()).format(format));\n\n  React.useEffect(() => {\n    const date = moment(new Date());\n    setInterval(() => setTime(date.format(format), 3000));\n    return () => clearInterval();\n  }, []);\n\n  return (\n    <>\n      <AppBar className={classes.root} position='static'>\n        <Toolbar className={classes.toolBar}>\n          <Typography className={classes.title} variant='h6'>\n            <Link className={classes.link} to='/'>\n              {matches ? 'MH' : 'Mike Hohne'}\n            </Link>\n          </Typography>\n          <Button>\n            <Link className={classes.link} to='/portfolio'>\n              Portfolio\n            </Link>\n          </Button>\n          <Button>\n            <Link className={classes.link} to='/test'>\n              Contact\n            </Link>\n          </Button>\n          <span className={classes.time}>{time}</span>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport { Typography, Link, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    textAlign: 'center'\n  },\n  link: {\n    cursor: 'pointer',\n    '&:hover': {\n      textDecoration: 'none'\n    },\n    padding: '4px'\n  }\n}));\n\nconst PortfolioDetail = props => {\n  const { project, handleClick } = props;\n\n  function onSelect() {\n    handleClick(project.id);\n  }\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Link onClick={onSelect} className={classes.link}>\n        <Typography variant='h6'>{project.title}</Typography>\n      </Link>\n      <div>\n        {project.techs.map((tech, i) => (\n          <Link\n            key={tech + i}\n            onClick={() =>\n              window.open(`https://google.com/search?q=${tech}`, '_blank')\n            }\n            className={classes.link}\n          >\n            {tech}\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PortfolioDetail;\n","import React from 'react';\nimport { List, ListItem, makeStyles, Paper } from '@material-ui/core';\nimport PortfolioDetail from './PortfolioDetail';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap'\n  },\n  paper: {\n    minHeight: '300px',\n    minWidth: '300px',\n    margin: '10px'\n  },\n  listItem: {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nconst projects = [\n  { title: 'First', id: 'first', techs: ['javascript', 'nodejs'] },\n  { title: 'Second', id: 'second', techs: ['react', 'javascript'] },\n  { title: 'Third', id: 'third', techs: ['angular', 'javascript'] },\n  { title: 'Fourth', id: 'fourth', techs: ['react', 'javascript'] },\n  { title: 'Fifth', id: 'fifth', techs: ['c#'] }\n];\n\nconst PortfolioList = props => {\n  const classes = useStyles();\n\n  function navigate(id) {\n    props.history.push(`/portfolio/${id}`, {\n      project: projects.find(proj => proj.id === id)\n    });\n  }\n  return (\n    <List className={classes.root}>\n      {projects.map(project => (\n        <Paper key={project.title} className={classes.paper}>\n          <ListItem className={classes.listItem}>\n            <PortfolioDetail handleClick={navigate} project={project} />\n          </ListItem>\n        </Paper>\n      ))}\n    </List>\n  );\n};\n\nexport default PortfolioList;\n","import React from 'react';\nimport PortfolioList from './components/PortfolioList';\n\nconst Portfolio = props => {\n  return <PortfolioList {...props} />;\n};\n\nexport default Portfolio;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '10px',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nconst PortfolioPageDetail = props => {\n  const { project } = props.location.state;\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.root}>\n        <Typography variant='h4'>{project.title}</Typography>\n      </div>\n    </>\n  );\n};\n\nexport default PortfolioPageDetail;\n","import React from 'react';\nimport './App.css';\nimport Landing from './pages/Landing';\nimport MainContainer from './components/MainContainer';\nimport NavBar from './components/NavBar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Portfolio from './pages/Portfolio/Portfolio';\nimport PortfolioPageDetail from './pages/Portfolio/PortfolioPageDetail';\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <NavBar />\n        <MainContainer>\n          <Switch>\n            <Route exact path='/' component={Landing} />\n            <Route exact path='/home' component={Landing} />\n            <Route exact path='/portfolio' component={Portfolio} />\n            <Route\n              exact\n              path='/portfolio/:id'\n              component={PortfolioPageDetail}\n            />\n          </Switch>\n        </MainContainer>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}